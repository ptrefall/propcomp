CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(NAME Engine)
PROJECT(${NAME})

file(GLOB TOTEM_HEADER ${CMAKE_SOURCE_DIR}/Include/Totem/*.h)
SOURCE_GROUP("Source Files\\Include\\Totem" FILES ${TOTEM_HEADER})

file(GLOB CL_HEADER ${CMAKE_SOURCE_DIR}/Include/ClanLib/*.h)
SOURCE_GROUP("Source Files\\Include\\ClanLib" FILES ${CL_HEADER})

file(GLOB HEADER_FILES *.h)
file(GLOB SOURCE_FILES *.cpp)
SOURCE_GROUP("Source Files\\" FILES ${HEADER_FILES} ${SOURCE_FILES})

file(GLOB HEADER_FILES_AUDIO Audio/*.h)
file(GLOB SOURCE_FILES_AUDIO Audio/*.cpp)
SOURCE_GROUP("Source Files\\Audio\\" FILES ${HEADER_FILES_AUDIO} ${SOURCE_FILES_AUDIO})

file(GLOB HEADER_FILES_GAMEWORLD GameWorld/*.h)
file(GLOB SOURCE_FILES_GAMEWORLD GameWorld/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\" FILES ${HEADER_FILES_GAMEWORLD} ${SOURCE_FILES_GAMEWORLD})

file(GLOB HEADER_FILES_JAVASCRIPT JavaScript/*.h)
file(GLOB SOURCE_FILES_JAVASCRIPT JavaScript/*.cpp)
SOURCE_GROUP("Source Files\\GameWorld\\" FILES ${HEADER_FILES_JAVASCRIPT} ${SOURCE_FILES_JAVASCRIPT})

file(GLOB HEADER_FILES_NETWORK Network/*.h)
file(GLOB SOURCE_FILES_NETWORK Network/*.cpp)
SOURCE_GROUP("Source Files\\Network\\" FILES ${HEADER_FILES_NETWORK} ${SOURCE_FILES_NETWORK})

file(GLOB HEADER_FILES_PERF Performance/*.h)
file(GLOB SOURCE_FILES_PERF Performance/*.cpp)
SOURCE_GROUP("Source Files\\Performance\\" FILES ${HEADER_FILES_PERF} ${SOURCE_FILES_PERF})

file(GLOB HEADER_FILES_SCENE Scene/*.h)
file(GLOB SOURCE_FILES_SCENE Scene/*.cpp)
SOURCE_GROUP("Source Files\\Scene\\" FILES ${HEADER_FILES_SCENE} ${SOURCE_FILES_SCENE})

file(GLOB HEADER_FILES_SCRIPTBINDINGS ScriptBindings/*.h)
file(GLOB SOURCE_FILES_SCRIPTBINDINGS ScriptBindings/*.cpp)
SOURCE_GROUP("Source Files\\ScriptBindings\\" FILES ${HEADER_FILES_SCRIPTBINDINGS} ${SOURCE_FILES_SCRIPTBINDINGS})

file(GLOB HEADER_FILES_UI UIFramework/*.h)
file(GLOB SOURCE_FILES_UI UIFramework/*.cpp)
SOURCE_GROUP("Source Files\\UIFramework\\" FILES ${HEADER_FILES_UI} ${SOURCE_FILES_UI})
 
add_library(${NAME} STATIC 
	${HEADER_FILES} ${SOURCE_FILES} 
	${HEADER_FILES_AUDIO} ${SOURCE_FILES_AUDIO}
	${HEADER_FILES_GAMEWORLD} ${SOURCE_FILES_GAMEWORLD}
	${HEADER_FILES_NETWORK} ${SOURCE_FILES_NETWORK}
	${HEADER_FILES_PERF} ${SOURCE_FILES_PERF}
	${HEADER_FILES_SCENE} ${SOURCE_FILES_SCENE}
	${HEADER_FILES_SCRIPTBINDINGS} ${SOURCE_FILES_SCRIPTBINDINGS}
	${HEADER_FILES_UI} ${SOURCE_FILES_UI}
	${TOTEM_HEADER} 
	${CL_HEADER})

set_target_properties(${NAME} PROPERTIES FOLDER "Sources")

if (MSVC)
   set_target_properties(${NAME} PROPERTIES COMPILE_FLAGS "/Yuprecomp.h")
   set_source_files_properties(precomp.cpp PROPERTIES COMPILE_FLAGS "/Ycprecomp.h")
endif(MSVC)

FIND_PACKAGE(ClanLib REQUIRED)
TARGET_LINK_LIBRARIES(${NAME} 
	debug ${CL_CORE_LIBRARY_DEBUG} 	 optimized ${CL_CORE_LIBRARY_RELEASE}
	debug ${CL_DB_LIBRARY_DEBUG} 	 optimized ${CL_DB_LIBRARY_RELEASE}
	debug ${CL_NET_LIBRARY_DEBUG} 	 optimized ${CL_NET_LIBRARY_RELEASE}
	debug ${CL_SQ_LIBRARY_DEBUG} 	 optimized ${CL_SQ_LIBRARY_RELEASE}
	debug ${CL_VORBIS_LIBRARY_DEBUG} optimized ${CL_VORBIS_LIBRARY_RELEASE}
)

INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/Sources/Engine/
)
