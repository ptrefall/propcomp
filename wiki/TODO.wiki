#summary Tasks left to do for Totem EDK

= Tasks =
 * 3) Add preprocessor for 3rd party libraries.
   * !ClanLib
   * Boost
   * Standard (Minimal Dependencies)
 * 3) Remove unused stuff
   * Get rid of types_config.h
   * Remove preprocessor console app
   * Remove .sh based preprocessor
 * 3) !ClanLib preprocessor - signal connect() needs to store it in a Slot/!SlotContainer (example and tests)
 * 3) Fix includes to not use global includes within own files (In Progress)
 * 3) Add post-build step that copies compiled .lib into lib/ folder.
 * 3) Revisit Totem's exception handling. Make sure it's used correctly in all situations.
 * 3) Revisit Totem's factory handling. Could components and properties leverage pooling for more cache friendly memory handling?
 * 4) Write XML loader example.
 * 5) Write XML property state saving example.
 * 6) Write script language integration example.
 * 7) Write Documentation
   * Frontpage 
     * Updated description and feature list
     * Easier examples
   * Docs/Wiki
 * 8) Write stress tests for all features of Totem EDK.
 * 9) Write unit tests for all features of Totem EDK.
 * 10) Write simple game example.
 * 11) Write Entity Editor tool.

= Recently Fixed TODOs =
 * 3) Add option in CMake for building project with Unicode Character Set.
 * 2) Rename the "forced" parameter in set function of Property to override_readonly, and add another parameter named invoke_value_changed. Last parameter should default to true and dictate whether the valueChanged signal is called or not.
 * 1) Move event and delegate handling out from core-Totem (and Entity)
   * Move it into !TotemEvent library ? split src into src_totem, src_totem_event ? What about any versus template, scheduling ?
   * Create new Entity type (!GameObject, !TotemExamples::Entity?) for examples that uses totem core and events
 * 1) Fix hashing for linux (add bundled min-depend on !MurmurHash3).
 * 1) Remove v7 and v8 editions of template classes
 * 1) Remove special bool handling
 * 1) Remove template and any event handler defines and checks in example code + types_config.h
 * 2) Revisit serializer interface and the handling internal in properties.
 * 1) Add option in cmake to set the project's runtime library to static, not the default DLL (at least in visual studio).
 * 1) Add group description to properties